"use strict";(self.webpackChunkyiwen_blog_website=self.webpackChunkyiwen_blog_website||[]).push([[8831],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),d=i,b=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var c=2;c<l;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},719:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const l={sidebar_position:6},a="\u65ad\u70b9\u7eed\u4f20",o={unversionedId:"backend/java/break_point_resume",id:"backend/java/break_point_resume",title:"\u65ad\u70b9\u7eed\u4f20",description:"\u65ad\u70b9\u7eed\u4f20\u662f\u4e00\u79cd\u7f51\u7edc\u4f20\u8f93\u6280\u672f\uff0c\u7528\u4e8e\u5b9e\u73b0\u6587\u4ef6\u7684\u90e8\u5206\u4e0b\u8f7d\u6216\u4e0a\u4f20\uff0c\u4ee5\u4fbf\u5728\u8fde\u63a5\u65ad\u5f00\u6216\u5176\u4ed6\u6545\u969c\u53d1\u751f\u65f6\uff0c\u80fd\u4ece\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u5f00\u59cb\u3002\u8fd9\u5728\u4f20\u8f93\u5927\u6587\u4ef6\u6216\u5728\u7f51\u7edc\u73af\u5883\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\u7279\u522b\u6709\u7528\u3002",source:"@site/docs/backend/java/break_point_resume.md",sourceDirName:"backend/java",slug:"/backend/java/break_point_resume",permalink:"/yiwen-blog-website/docs/backend/java/break_point_resume",draft:!1,editUrl:"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/backend/java/break_point_resume.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"backendSidebar",previous:{title:"\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf",permalink:"/yiwen-blog-website/docs/backend/java/file_system"},next:{title:"Mysql",permalink:"/yiwen-blog-website/docs/category/mysql"}},s={},c=[{value:"\u5e38\u7528\u7684\u65ad\u70b9\u7eed\u4f20\u6280\u672f\uff1a",id:"\u5e38\u7528\u7684\u65ad\u70b9\u7eed\u4f20\u6280\u672f",level:2},{value:"\u9879\u76ee\u9009\u578b",id:"\u9879\u76ee\u9009\u578b",level:2}],u={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u65ad\u70b9\u7eed\u4f20"},"\u65ad\u70b9\u7eed\u4f20"),(0,i.kt)("p",null,"\u65ad\u70b9\u7eed\u4f20\u662f\u4e00\u79cd\u7f51\u7edc\u4f20\u8f93\u6280\u672f\uff0c\u7528\u4e8e\u5b9e\u73b0\u6587\u4ef6\u7684\u90e8\u5206\u4e0b\u8f7d\u6216\u4e0a\u4f20\uff0c\u4ee5\u4fbf\u5728\u8fde\u63a5\u65ad\u5f00\u6216\u5176\u4ed6\u6545\u969c\u53d1\u751f\u65f6\uff0c\u80fd\u4ece\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u5f00\u59cb\u3002\u8fd9\u5728\u4f20\u8f93\u5927\u6587\u4ef6\u6216\u5728\u7f51\u7edc\u73af\u5883\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\u7279\u522b\u6709\u7528\u3002"),(0,i.kt)("h2",{id:"\u5e38\u7528\u7684\u65ad\u70b9\u7eed\u4f20\u6280\u672f"},"\u5e38\u7528\u7684\u65ad\u70b9\u7eed\u4f20\u6280\u672f\uff1a"),(0,i.kt)("p",null,"HTTP Range \u8bf7\u6c42\uff1aHTTP/1.1 \u534f\u8bae\u652f\u6301 Range \u5934\uff0c\u7528\u4e8e\u8bf7\u6c42\u6587\u4ef6\u7684\u67d0\u4e2a\u8303\u56f4\u3002\u670d\u52a1\u7aef\u4e5f\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u8303\u56f4\u6570\u636e\uff0c\u5e76\u4f7f\u7528 206 Partial Content \u72b6\u6001\u7801\u4f5c\u4e3a\u54cd\u5e94\u3002"),(0,i.kt)("p",null,"\u5206\u5757\u4e0b\u8f7d\uff1a\u5c06\u6587\u4ef6\u5206\u6210\u591a\u4e2a\u5c0f\u5757\uff0c\u6bcf\u4e2a\u5c0f\u5757\u90fd\u53ef\u4ee5\u72ec\u7acb\u4e0b\u8f7d\u3002\u5982\u679c\u67d0\u4e2a\u5757\u4e0b\u8f7d\u5931\u8d25\uff0c\u53ea\u9700\u91cd\u65b0\u4e0b\u8f7d\u8be5\u5757\u3002"),(0,i.kt)("p",null,"P2P \u4f20\u8f93\uff1a\u5728 Peer-to-Peer \u7f51\u7edc\u4e2d\uff0c\u540c\u4e00\u4e2a\u6587\u4ef6\u53ef\u80fd\u5b58\u5728\u4e8e\u591a\u4e2a\u8282\u70b9\u4e0a\u3002\u65ad\u70b9\u7eed\u4f20\u53ef\u4ee5\u901a\u8fc7\u4ece\u4e0d\u540c\u8282\u70b9\u4e0b\u8f7d\u4e0d\u540c\u7684\u6587\u4ef6\u5757\u6765\u5b9e\u73b0\u3002"),(0,i.kt)("p",null,"FTP \u534f\u8bae\uff1aFTP\uff08\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u4e5f\u652f\u6301\u65ad\u70b9\u7eed\u4f20\uff0c\u901a\u5e38\u901a\u8fc7 REST \u547d\u4ee4\u6765\u8bbe\u7f6e\u5f00\u59cb\u4f20\u8f93\u7684\u6587\u4ef6\u504f\u79fb\u91cf\u3002"),(0,i.kt)("p",null,"\u5143\u6570\u636e\u8bb0\u5f55\uff1a\u901a\u8fc7\u8bb0\u5f55\u5df2\u7ecf\u6210\u529f\u4e0b\u8f7d\u6216\u4e0a\u4f20\u7684\u6570\u636e\u5757\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6216\u7cfb\u7edf\u91cd\u542f\u540e\uff0c\u51c6\u786e\u5730\u4ece\u4e0a\u6b21\u6210\u529f\u7684\u5730\u65b9\u7ee7\u7eed\u3002"),(0,i.kt)("h2",{id:"\u9879\u76ee\u9009\u578b"},"\u9879\u76ee\u9009\u578b"),(0,i.kt)("p",null,"\u5206\u5757\u4e0a\u4f20\u4e0b\u8f7d\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'//    \u5206\u5757\u4e0b\u8f7d\n    @Test\n    public void testChunk() throws Exception {\n        File sourceFile = new File("/Users/yw.hao/Desktop/2.mov");\n//        \u5206\u5757\u6587\u4ef6\u5b58\u50a8\u8def\u5f84\n        String chunkFilePath = "/Users/yw.hao/Desktop/chunk/";\n//        \u5206\u5f00\u6587\u4ef6\u5927\u5c0f\n        int chunkSize = 1024 * 1024 * 1;\n//        \u5206\u5f00\u6587\u4ef6\u4e2a\u6570\n        int chunkNum = (int) Math.ceil(sourceFile.length() * 1.0 / chunkSize);\n        RandomAccessFile r = new RandomAccessFile(sourceFile, "r");\n//        \u7f13\u51b2\u533a\n        byte[] bytes = new byte[1024];\n        for (int i = 0; i < chunkNum; i++) {\n            File chunkFile = new File(chunkFilePath + i);\n            RandomAccessFile raf_r = new RandomAccessFile(chunkFile, "rw");\n            int len = -1;\n            while ((len = r.read(bytes)) != -1) {\n                raf_r.write(bytes, 0, len);\n                if (chunkFile.length() >= chunkSize) {\n                    break;\n                }\n            }\n            raf_r.close();\n        }\n        r.close();\n    }\n\n    //    \u5206\u5757\u5408\u5e76\n    @Test\n    public void testMerge() throws IOException {\n        //        \u5206\u5757\u6587\u4ef6\u5b58\u50a8\u8def\u5f84\n        String chunkFilePath = "/Users/yw.hao/Desktop/chunk/";\n        File chunkFolder = new File(chunkFilePath);\n        File sourceFile = new File("/Users/yw.hao/Desktop/2.mov");\n        File mergeFile = new File("/Users/yw.hao/Desktop/3.mov");\n        File[] files = chunkFolder.listFiles();\n        List<File> fileList = Arrays.asList(files);\n\n        Collections.sort(fileList, new Comparator<File>() {\n            @Override\n            public int compare(File o1, File o2) {\n                return Integer.parseInt(o1.getName()) - Integer.parseInt(o2.getName());\n            }\n        });\n//        \u5411\u5408\u5e76\u6587\u4ef6\u5199\u7684\u6d41\n        RandomAccessFile raf_rw = new RandomAccessFile(mergeFile, "rw");\n        byte[] bytes = new byte[1024];\n\n//        \u4fbf\u5229\u5206\u5757\u6587\u4ef6\uff0c\u5408\u5e76\n        for (File file : fileList) {\n            RandomAccessFile raf_r = new RandomAccessFile(file, "r");\n            int len = -1;\n            while ((len = raf_r.read(bytes)) != -1) {\n                raf_rw.write(bytes, 0, len);\n            }\n            raf_r.close();\n        }\n        raf_rw.close();\n//        \u5408\u5e76\u6587\u4ef6\u5b8c\u6210\n        FileInputStream fileInputStream_merge = new FileInputStream(mergeFile);\n        FileInputStream fileInputStream_source = new FileInputStream(sourceFile);\n        String md5_merge = DigestUtils.md5Hex(fileInputStream_merge);\n        String md5_source = DigestUtils.md5Hex(fileInputStream_source);\n        if (md5_merge.equals(md5_source)) {\n            System.out.println("\u6587\u4ef6\u5408\u5e76\u5b8c\u6210");\n        }\n    }\n')))}m.isMDXComponent=!0}}]);