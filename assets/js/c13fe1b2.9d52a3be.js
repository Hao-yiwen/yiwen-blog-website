"use strict";(self.webpackChunkyiwen_blog_website=self.webpackChunkyiwen_blog_website||[]).push([[2712],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>v});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),d=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},p=function(e){var n=d(e.components);return t.createElement(i.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=d(a),m=r,v=s["".concat(i,".").concat(m)]||s[m]||u[m]||o;return a?t.createElement(v,l(l({ref:n},p),{},{components:a})):t.createElement(v,l({ref:n},p))}));function v(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[s]="string"==typeof e?e:r,l[1]=c;for(var d=2;d<o;d++)l[d]=a[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},82312:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=a(87462),r=(a(67294),a(3905));const o={},l="\ud83d\udc0d Conda \u5e38\u7528\u547d\u4ee4\uff08\u7b80\u5316\u7248\uff09",c={unversionedId:"ai/python/conda",id:"ai/python/conda",title:"\ud83d\udc0d Conda \u5e38\u7528\u547d\u4ee4\uff08\u7b80\u5316\u7248\uff09",description:"\u5b89\u88c5 Conda",source:"@site/docs/ai/python/conda.md",sourceDirName:"ai/python",slug:"/ai/python/conda",permalink:"/yiwen-blog-website/docs/ai/python/conda",draft:!1,editUrl:"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/ai/python/conda.md",tags:[],version:"current",frontMatter:{},sidebar:"aiSidebar",previous:{title:"python\u6807\u51c6\u5e93",permalink:"/yiwen-blog-website/docs/ai/python/base"},next:{title:"\ud83d\ude80 uv \u5e38\u7528\u547d\u4ee4\uff08\u7b80\u5316\u7248\uff09",permalink:"/yiwen-blog-website/docs/ai/python/uv"}},i={},d=[{value:"\u5b89\u88c5 Conda",id:"\u5b89\u88c5-conda",level:2},{value:"\ud83d\udce6 \u57fa\u672c\u5de5\u4f5c\u6d41",id:"-\u57fa\u672c\u5de5\u4f5c\u6d41",level:2},{value:"1. \u521b\u5efa\u73af\u5883",id:"1-\u521b\u5efa\u73af\u5883",level:3},{value:"2. \u6fc0\u6d3b/\u5207\u6362\u73af\u5883",id:"2-\u6fc0\u6d3b\u5207\u6362\u73af\u5883",level:3},{value:"3. \u7ba1\u7406\u4f9d\u8d56",id:"3-\u7ba1\u7406\u4f9d\u8d56",level:3},{value:"4. \u8fd0\u884c\u4ee3\u7801",id:"4-\u8fd0\u884c\u4ee3\u7801",level:3},{value:"\ud83c\udf0d \u73af\u5883\u7ba1\u7406",id:"-\u73af\u5883\u7ba1\u7406",level:2},{value:"\ud83d\udccb \u67e5\u770b\u4fe1\u606f",id:"-\u67e5\u770b\u4fe1\u606f",level:2},{value:"\ud83d\udce4 \u5bfc\u5165/\u5bfc\u51fa\u73af\u5883",id:"-\u5bfc\u5165\u5bfc\u51fa\u73af\u5883",level:2},{value:"\ud83d\udca1 \u5b9e\u9645\u4f8b\u5b50",id:"-\u5b9e\u9645\u4f8b\u5b50",level:2},{value:"\u521b\u5efa\u6570\u636e\u79d1\u5b66\u73af\u5883",id:"\u521b\u5efa\u6570\u636e\u79d1\u5b66\u73af\u5883",level:3},{value:"\u521b\u5efa\u6df1\u5ea6\u5b66\u4e60\u73af\u5883",id:"\u521b\u5efa\u6df1\u5ea6\u5b66\u4e60\u73af\u5883",level:3},{value:"\u2699\ufe0f \u5e38\u7528\u914d\u7f6e",id:"\ufe0f-\u5e38\u7528\u914d\u7f6e",level:2},{value:"\ud83c\udfaf \u8bb0\u4f4f\u8fd96\u4e2a\u547d\u4ee4\u5c31\u591f\u4e86",id:"-\u8bb0\u4f4f\u8fd96\u4e2a\u547d\u4ee4\u5c31\u591f\u4e86",level:2}],p={toc:d},s="wrapper";function u(e){let{components:n,...a}=e;return(0,r.kt)(s,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-conda-\u5e38\u7528\u547d\u4ee4\u7b80\u5316\u7248"},"\ud83d\udc0d Conda \u5e38\u7528\u547d\u4ee4\uff08\u7b80\u5316\u7248\uff09"),(0,r.kt)("h2",{id:"\u5b89\u88c5-conda"},"\u5b89\u88c5 Conda"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# macOS (\u63a8\u8350 Miniforge\uff0c\u66f4\u5feb\u66f4\u8f7b\u91cf)\nbrew install miniforge\n\n# \u6216\u4e0b\u8f7d Miniconda\n# https://docs.conda.io/en/latest/miniconda.html\n")),(0,r.kt)("h2",{id:"-\u57fa\u672c\u5de5\u4f5c\u6d41"},"\ud83d\udce6 \u57fa\u672c\u5de5\u4f5c\u6d41"),(0,r.kt)("h3",{id:"1-\u521b\u5efa\u73af\u5883"},"1. \u521b\u5efa\u73af\u5883"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n myenv python=3.11          # \u521b\u5efa\u73af\u5883\nconda create -n myenv python=3.11 numpy    # \u540c\u65f6\u5b89\u88c5\u5305\n")),(0,r.kt)("h3",{id:"2-\u6fc0\u6d3b\u5207\u6362\u73af\u5883"},"2. \u6fc0\u6d3b/\u5207\u6362\u73af\u5883"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda activate myenv        # \u6fc0\u6d3b\u73af\u5883\nconda deactivate           # \u9000\u51fa\u73af\u5883\n")),(0,r.kt)("h3",{id:"3-\u7ba1\u7406\u4f9d\u8d56"},"3. \u7ba1\u7406\u4f9d\u8d56"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda install pandas       # \u5b89\u88c5\u5305\nconda install numpy=1.24   # \u6307\u5b9a\u7248\u672c\nconda remove pandas        # \u5220\u9664\u5305\nconda update pandas        # \u66f4\u65b0\u5305\n")),(0,r.kt)("h3",{id:"4-\u8fd0\u884c\u4ee3\u7801"},"4. \u8fd0\u884c\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u6fc0\u6d3b\u73af\u5883\u540e\u76f4\u63a5\u8fd0\u884c\nconda activate myenv\npython main.py\n")),(0,r.kt)("h2",{id:"-\u73af\u5883\u7ba1\u7406"},"\ud83c\udf0d \u73af\u5883\u7ba1\u7406"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda env list             # \u67e5\u770b\u6240\u6709\u73af\u5883\nconda env remove -n myenv  # \u5220\u9664\u73af\u5883\n")),(0,r.kt)("h2",{id:"-\u67e5\u770b\u4fe1\u606f"},"\ud83d\udccb \u67e5\u770b\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda list                 # \u5f53\u524d\u73af\u5883\u7684\u5305\nconda list -n myenv        # \u6307\u5b9a\u73af\u5883\u7684\u5305\nconda search numpy         # \u641c\u7d22\u53ef\u7528\u5305\u7248\u672c\n")),(0,r.kt)("h2",{id:"-\u5bfc\u5165\u5bfc\u51fa\u73af\u5883"},"\ud83d\udce4 \u5bfc\u5165/\u5bfc\u51fa\u73af\u5883"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u5bfc\u51fa\u73af\u5883\nconda env export > environment.yml\n\n# \u4ece\u6587\u4ef6\u521b\u5efa\u73af\u5883\nconda env create -f environment.yml\n")),(0,r.kt)("h2",{id:"-\u5b9e\u9645\u4f8b\u5b50"},"\ud83d\udca1 \u5b9e\u9645\u4f8b\u5b50"),(0,r.kt)("h3",{id:"\u521b\u5efa\u6570\u636e\u79d1\u5b66\u73af\u5883"},"\u521b\u5efa\u6570\u636e\u79d1\u5b66\u73af\u5883"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n ds python=3.11\nconda activate ds\nconda install pandas numpy matplotlib scikit-learn jupyter\njupyter lab\n")),(0,r.kt)("h3",{id:"\u521b\u5efa\u6df1\u5ea6\u5b66\u4e60\u73af\u5883"},"\u521b\u5efa\u6df1\u5ea6\u5b66\u4e60\u73af\u5883"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n ml python=3.11\nconda activate ml\nconda install pytorch torchvision -c pytorch\npython train.py\n")),(0,r.kt)("h2",{id:"\ufe0f-\u5e38\u7528\u914d\u7f6e"},"\u2699\ufe0f \u5e38\u7528\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u7981\u7528base\u81ea\u52a8\u6fc0\u6d3b\nconda config --set auto_activate_base false\n\n# \u6dfb\u52a0conda-forge\u9891\u9053\nconda config --add channels conda-forge\n\n# \u6e05\u7406\u7f13\u5b58\nconda clean --all\n")),(0,r.kt)("h2",{id:"-\u8bb0\u4f4f\u8fd96\u4e2a\u547d\u4ee4\u5c31\u591f\u4e86"},"\ud83c\udfaf \u8bb0\u4f4f\u8fd96\u4e2a\u547d\u4ee4\u5c31\u591f\u4e86"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n name python=3.11  # \u521b\u5efa\u73af\u5883\nconda activate name               # \u6fc0\u6d3b\u73af\u5883\nconda install package            # \u5b89\u88c5\u5305\nconda list                       # \u67e5\u770b\u5305\nconda env list                   # \u67e5\u770b\u73af\u5883\nconda deactivate                 # \u9000\u51fa\u73af\u5883\n")))}u.isMDXComponent=!0}}]);