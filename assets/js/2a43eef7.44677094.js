"use strict";(globalThis.webpackChunkyiwen_blog_website=globalThis.webpackChunkyiwen_blog_website||[]).push([[96704],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},95722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"native/ios/widget/simple_widget","title":"\u5c0f\u7ec4\u4ef6\u6784\u6210\u90e8\u5206","description":"\u4e00\u4e2a iOS \u5c0f\u7ec4\u4ef6\u901a\u5e38\u7531\u4ee5\u4e0b\u4e09\u90e8\u5206\u7ec4\u6210\uff1a","source":"@site/docs/native/ios/widget/simple_widget.md","sourceDirName":"native/ios/widget","slug":"/native/ios/widget/simple_widget","permalink":"/yiwen-blog-website/docs/native/ios/widget/simple_widget","draft":false,"unlisted":false,"editUrl":"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/native/ios/widget/simple_widget.md","tags":[],"version":"current","frontMatter":{},"sidebar":"nativeSidebar","previous":{"title":"\u4ecb\u7ecd","permalink":"/yiwen-blog-website/docs/native/ios/widget/intro"},"next":{"title":"Xcode\u5e38\u89c1\u547d\u4ee4","permalink":"/yiwen-blog-website/docs/native/ios/xcode"}}');var r=t(74848),o=t(28453);const a={},s="\u5c0f\u7ec4\u4ef6\u6784\u6210\u90e8\u5206",l={},d=[{value:"\u4ee3\u7801\u793a\u4f8b",id:"\u4ee3\u7801\u793a\u4f8b",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u5c0f\u7ec4\u4ef6\u6784\u6210\u90e8\u5206",children:"\u5c0f\u7ec4\u4ef6\u6784\u6210\u90e8\u5206"})}),"\n",(0,r.jsx)(n.p,{children:"\u4e00\u4e2a iOS \u5c0f\u7ec4\u4ef6\u901a\u5e38\u7531\u4ee5\u4e0b\u4e09\u90e8\u5206\u7ec4\u6210\uff1a"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Widget: \u8fd9\u662f\u5c0f\u7ec4\u4ef6\u7684\u4e3b\u8981\u5165\u53e3\uff0c\u5b9a\u4e49\u4e86\u5c0f\u7ec4\u4ef6\u7684\u6807\u8bc6\u7b26\u548c\u914d\u7f6e\u3002"}),"\n",(0,r.jsx)(n.li,{children:"WidgetConfigurationIntent: \u8fd9\u662f\u53ef\u9009\u7684\u914d\u7f6e\u610f\u56fe\uff0c\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u5c0f\u7ec4\u4ef6\u7684\u884c\u4e3a\u6216\u5916\u89c2\u3002"}),"\n",(0,r.jsx)(n.li,{children:"TimelineProvider: \u8fd9\u662f\u65f6\u95f4\u7ebf\u63d0\u4f9b\u8005\uff0c\u7528\u4e8e\u751f\u6210\u5e76\u63d0\u4f9b\u5c0f\u7ec4\u4ef6\u7684\u6570\u636e\u548c\u65f6\u95f4\u7ebf\u6761\u76ee\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u4ee3\u7801\u793a\u4f8b",children:"\u4ee3\u7801\u793a\u4f8b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-swift",children:'import WidgetKit\nimport SwiftUI\nimport Intents\nimport AppIntents\n\nstruct ConfigurationAppIntent: WidgetConfigurationIntent {\n    static var title: LocalizedStringResource = "Configuration"\n    static var description = IntentDescription("This is an example widget.")\n\n    @Parameter(title: "Favorite Emoji", default: "\ud83d\ude03")\n    var favoriteEmoji: String\n}\n\nstruct Provider: TimelineProvider {\n    func placeholder(in context: Context) -> SimpleEntry {\n        SimpleEntry(date: Date(), configuration: ConfigurationAppIntent())\n    }\n\n    func getSnapshot(in context: Context, completion: @escaping (SimpleEntry) -> ()) {\n        let entry = SimpleEntry(date: Date(), configuration: ConfigurationAppIntent())\n        completion(entry)\n    }\n\n    func getTimeline(in context: Context, completion: @escaping (Timeline<SimpleEntry>) -> ()) {\n        var entries: [SimpleEntry] = []\n\n        let currentDate = Date()\n        for hourOffset in 0 ..< 5 {\n            let entryDate = Calendar.current.date(byAdding: .hour, value: hourOffset, to: currentDate)!\n            let entry = SimpleEntry(date: entryDate, configuration: ConfigurationAppIntent())\n            entries.append(entry)\n        }\n\n        let timeline = Timeline(entries: entries, policy: .atEnd)\n        completion(timeline)\n    }\n}\n\nstruct SimpleEntry: TimelineEntry {\n    let date: Date\n    let configuration: ConfigurationAppIntent\n}\n\nstruct WidgetEntryView: View {\n    var entry: Provider.Entry\n\n    var body: some View {\n        Text(entry.date, style: .time)\n            .containerBackground(Color.blue, for: .widget)\n    }\n}\n\n@main\nstruct MyWidget: Widget {\n    let kind: String = "MyWidget"\n\n    var body: some WidgetConfiguration {\n        StaticConfiguration(kind: kind, provider: Provider()) { entry in\n            WidgetEntryView(entry: entry)\n        }\n        .configurationDisplayName("My Widget")\n        .description("This is an example widget.")\n    }\n}\n\nstruct MyWidget_Previews: PreviewProvider {\n    static var previews: some View {\n        WidgetEntryView(entry: SimpleEntry(date: Date(), configuration: ConfigurationAppIntent()))\n            .previewContext(WidgetPreviewContext(family: .systemSmall))\n    }\n}\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);