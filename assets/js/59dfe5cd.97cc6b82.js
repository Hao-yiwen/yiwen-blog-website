"use strict";(globalThis.webpackChunkyiwen_blog_website=globalThis.webpackChunkyiwen_blog_website||[]).push([[8764],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},83634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>v,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"native/ReactNative/animatedDriverNativeOrJs","title":"\u7528\u539f\u751f\u6216\u8005js\u9a71\u52a8\u52a8\u753b","description":"\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\uff0cscrollview\u6bcf\u6b21\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u539f\u751f\u5c5e\u6027\u5176\u4f59\u7684\u624b\u52a8\u8d4b\u503c\u7684\u90fd\u662fjs\u9a71\u52a8\u3002","source":"@site/docs/native/ReactNative/animatedDriverNativeOrJs.md","sourceDirName":"native/ReactNative","slug":"/native/ReactNative/animatedDriverNativeOrJs","permalink":"/yiwen-blog-website/docs/native/ReactNative/animatedDriverNativeOrJs","draft":false,"unlisted":false,"editUrl":"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/native/ReactNative/animatedDriverNativeOrJs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"nativeSidebar","previous":{"title":"Animated","permalink":"/yiwen-blog-website/docs/native/ReactNative/animated"},"next":{"title":"RN\u6253\u5305\u547d\u4ee4","permalink":"/yiwen-blog-website/docs/native/ReactNative/build"}}');var r=t(74848),a=t(28453);const o={},s="\u7528\u539f\u751f\u6216\u8005js\u9a71\u52a8\u52a8\u753b",l={},c=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u7528\u539f\u751f\u6216\u8005js\u9a71\u52a8\u52a8\u753b",children:"\u7528\u539f\u751f\u6216\u8005js\u9a71\u52a8\u52a8\u753b"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React, { useRef } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Button,\n    Animated,\n    Dimensions,\n} from 'react-native';\n\nconst Index = props => {\n    const scrollviewJSDriverValue = useRef(new Animated.Value(0)).current;\n    const scrollviewNativeDriverValue = useRef(new Animated.Value(0)).current;\n    return (\n        <View style={{ flex: 1 }}>\n            <Animated.View\n                style={{\n                    width: 60,\n                    height: 60,\n                    backgroundColor: scrollviewJSDriverValue.interpolate({\n                        inputRange: [0, 5000],\n                        outputRange: ['#ff00ff', '#00ff00'],\n                    }),\n                }}\n            ></Animated.View>\n            <Animated.View\n                style={{\n                    width: 60,\n                    height: 60,\n                    backgroundColor: 'yellow',\n                    opacity: scrollviewNativeDriverValue.interpolate({\n                        inputRange: [0, 5000],\n                        outputRange: [1, 0],\n                    }),\n                }}\n            ></Animated.View>\n            <Animated.ScrollView\n                onScroll={Animated.event(\n                    [\n                        {\n                            nativeEvent: {\n                                contentOffset: {\n                                    y: scrollviewNativeDriverValue,\n                                },\n                            },\n                        },\n                    ],\n                    {\n                        useNativeDriver: true,\n                        listener: event => {\n                            scrollviewJSDriverValue.setValue(\n                                event.nativeEvent.contentOffset.y\n                            );\n                        },\n                    }\n                )}\n            >\n                {Array.from({ length: 100 }).map((_, index) => (\n                    <View\n                        key={index}\n                        style={{\n                            height: 50,\n                            backgroundColor: 'pink',\n                            marginBottom: 10,\n                            width: Dimensions.get('screen').width,\n                        }}\n                    >\n                        <Text>{index}</Text>\n                    </View>\n                ))}\n            </Animated.ScrollView>\n        </View>\n    );\n};\n\nexport default Index;\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\uff0cscrollview\u6bcf\u6b21\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u539f\u751f\u5c5e\u6027\u5176\u4f59\u7684\u624b\u52a8\u8d4b\u503c\u7684\u90fd\u662fjs\u9a71\u52a8\u3002"})]})}function v(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);