"use strict";(self.webpackChunkyiwen_blog_website=self.webpackChunkyiwen_blog_website||[]).push([[4645],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=c(n),s=a,f=p["".concat(u,".").concat(s)]||p[s]||y[s]||i;return n?r.createElement(f,l(l({ref:t},m),{},{components:n})):r.createElement(f,l({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},l="java\u548ckt\u4e2dlambda\u5b9e\u73b0\u53ca\u539f\u59cb\u5b9e\u73b0",o={unversionedId:"native/kotlin/lambda_implements",id:"native/kotlin/lambda_implements",title:"java\u548ckt\u4e2dlambda\u5b9e\u73b0\u53ca\u539f\u59cb\u5b9e\u73b0",description:"Kotlin",source:"@site/docs/native/kotlin/lambda_implements.md",sourceDirName:"native/kotlin",slug:"/native/kotlin/lambda_implements",permalink:"/yiwen-blog-website/en/docs/native/kotlin/lambda_implements",draft:!1,editUrl:"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/native/kotlin/lambda_implements.md",tags:[],version:"current",frontMatter:{},sidebar:"nativeSidebar",previous:{title:"Kotlin\u4e2d\u7684Lambda\u8868\u8fbe\u5f0f",permalink:"/yiwen-blog-website/en/docs/native/kotlin/lambda"},next:{title:"mutableStateOf",permalink:"/yiwen-blog-website/en/docs/native/kotlin/mutableStateOf"}},u={},c=[{value:"Kotlin",id:"kotlin",level:2},{value:"Java",id:"java",level:2}],m={toc:c},p="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"java\u548ckt\u4e2dlambda\u5b9e\u73b0\u53ca\u539f\u59cb\u5b9e\u73b0"},"java\u548ckt\u4e2dlambda\u5b9e\u73b0\u53ca\u539f\u59cb\u5b9e\u73b0"),(0,a.kt)("h2",{id:"kotlin"},"Kotlin"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kt"},"// \u4f7f\u7528lambda\u8868\u8fbe\u5f0f\nfun mutilyFun(){\n    val mutily = {x:Int,y:Int ->\n        x*y\n    }\n    print(mutily(1,2)) // 2\n}\n\n// \u4e0d\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\uff0c\u4f7f\u7528\u51fd\u6570\u5f0f\u63a5\u53e3\u548c\u533f\u540d\u5185\u90e8\u7c7b\nfun interface mutilyInteface{\n    fun mutily(x:Int,y:Int):Int\n}\n\nfun mutilyFun(){\n    val mutily = object: mutilyInteface{\n        override fun mutily(x:Int,y:Int):Int{\n            return x*y\n        }\n    }\n    print(mutily(1,2)) // 2\n}\n")),(0,a.kt)("h2",{id:"java"},"Java"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\n @Test\npublic void mutilyFun() {\n    IntBinaryOperator intUnaryOperator = (x, y) -> {\n        return x * y;\n    };\n\n    System.out.println(intUnaryOperator.applyAsInt(10, 20));\n}\n\n\n// \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\ninterface MutilyInterface{\n    int mutily(int x, int y);\n}\n\n@Test\npublic void mutilyFun(){\n    MutilyInterface mutilyInterface = new MutilyInterface() {\n        @Override\n        public int mutily(int x, int y) {\n            return x * y;\n        }\n    };\n\n    System.out.println(mutilyInterface.mutily(10, 20));\n}\n")))}y.isMDXComponent=!0}}]);