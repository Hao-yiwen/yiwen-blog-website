"use strict";(self.webpackChunkyiwen_blog_website=self.webpackChunkyiwen_blog_website||[]).push([[6114],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=o,v=d["".concat(c,".").concat(u)]||d[u]||m[u]||a;return t?r.createElement(v,i(i({ref:n},p),{},{components:t})):r.createElement(v,i({ref:n},p))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},80398:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(87462),o=(t(67294),t(3905));const a={},i="compose\u8bbe\u7f6e\u900f\u660e\u5bfc\u822a\u680f",l={unversionedId:"native/android/kotlin/transpat",id:"native/android/kotlin/transpat",title:"compose\u8bbe\u7f6e\u900f\u660e\u5bfc\u822a\u680f",description:"",source:"@site/docs/native/android/kotlin/transpat.md",sourceDirName:"native/android/kotlin",slug:"/native/android/kotlin/transpat",permalink:"/yiwen-blog-website/en/docs/native/android/kotlin/transpat",draft:!1,editUrl:"https://github.com/Hao-yiwen/yiwen-blog-website/tree/master/docs/native/android/kotlin/transpat.md",tags:[],version:"current",frontMatter:{},sidebar:"nativeSidebar",previous:{title:"Pair\u548cMap",permalink:"/yiwen-blog-website/en/docs/native/android/kotlin/pair"},next:{title:"vararg",permalink:"/yiwen-blog-website/en/docs/native/android/kotlin/vararg"}},c={},s=[],p={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compose\u8bbe\u7f6e\u900f\u660e\u5bfc\u822a\u680f"},"compose\u8bbe\u7f6e\u900f\u660e\u5bfc\u822a\u680f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kt"},"// \u770b\u4ee3\u7801\u6ce8\u91ca\n@Composable\nfun SuperHeroesTheme(\n    darkTheme: Boolean = isSystemInDarkTheme(),\n    // Dynamic color is available on Android 12+\n    dynamicColor: Boolean = false,\n    content: @Composable () -> Unit\n) {\n    val colorScheme = when {\n        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {\n            val context = LocalContext.current\n            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)\n        }\n\n        darkTheme -> DarkColors\n        else -> LightColors\n    }\n    // \u83b7\u53d6\u5f53\u524d\u9875\u9762\n    val view = LocalView.current\n    // \u5224\u65ad\u89c6\u9891\u5728\u7f16\u8f91\u5668\u4e2d\n    if (!view.isInEditMode) {\n        // \u63a7\u5236\u8fb9\u5012\u8fb9\u573a\u666f\n        SideEffect {\n            setUpEdgeToEdge(view = view, darkTheme = darkTheme)\n        }\n    }\n\n    MaterialTheme(\n        colorScheme = colorScheme,\n        typography = Typography,\n        shapes = Shapes,\n        content = content\n    )\n}\n\nprivate fun setUpEdgeToEdge(view: View, darkTheme: Boolean) {\n    val window = (view.context as Activity).window\n    // \u544a\u8bc9\u7cfb\u7edf\u81ea\u5df1\u63a7\u5236\u72b6\u6001\u680f\u559d\u5bfc\u822a\u680f\n    WindowCompat.setDecorFitsSystemWindows(window, false)\n    window.statusBarColor = Color.Transparent.toArgb()\n    val navigationColor = when {\n        Build.VERSION.SDK_INT >= 29 -> Color.Transparent.toArgb()\n        Build.VERSION.SDK_INT >= 26 -> Color(0xFF, 0xFF, 0xFF, 0x63).toArgb()\n        // Min sdk version for this app is 24, this block is for SDK versions 24 and 25\n        else -> Color(0x00, 0x00, 0x00, 0x50).toArgb()\n    }\n    window.navigationBarColor = navigationColor\n    // \u8bbe\u7f6e\u5bfc\u822a\u680f\u7684\u5b57\u4f53\u559d\u56fe\u6807\u989c\u8272\n    val controller = WindowCompat.getInsetsController(window, view)\n    controller.isAppearanceLightStatusBars = !darkTheme\n    controller.isAppearanceLightNavigationBars = !darkTheme\n}\n")))}m.isMDXComponent=!0}}]);